var App=new Marionette.Application;App.addRegions({mainRegion:"#main-region"}),App.latency=100,App.navigate=function(a,b){Backbone.history.navigate(a,b)},App.getCurrentRoute=function(){return Backbone.history.fragment},App.on("initialize:after",function(){Backbone.history&&(Backbone.history.start(),""===this.getCurrentRoute()&&App.trigger("contacts:list"))}),App.module("Entities",function(a,b,c,d,e,f){var g=function(a){if(a.urlRoot)return f.result(a,"urlRoot");if(a.url)return f.result(a,"url");if(a.collection&&a.collection.url)return f.result(a.collection,"url");throw new Error("Unable to determine storage key")},h=function(a){var b=g(a);return{localStorage:new c.LocalStorage(b)}};a.configureStorage=function(a){f.extend(a.prototype,new h(a.prototype))}}),App.module("ContactsApp",function(a,b,c,d){a.Router=d.AppRouter.extend({appRoutes:{contacts:"listContacts","contacts/:id":"showContact"}});var e={listContacts:function(){a.List.Controller.listContacts()},showContact:function(b){a.Show.Controller.showContact(b)}};b.on("contacts:list",function(){b.navigate("contacts"),e.listContacts()}),b.on("contact:show",function(a){b.navigate("contacts/"+a),e.showContact(a)}),b.addInitializer(function(){new a.Router({controller:e})})}),App.module("ContactsApp.List",function(a,b){a.Controller={listContacts:function(){var c=b.request("contact:entities");$.when(c).done(function(c){var d=new a.Contacts({collection:c});b.mainRegion.show(d),d.on("itemview:contact:delete",function(a,b){b.destroy()}),d.on("itemview:contact:show",function(a,c){b.trigger("contact:show",c.get("id"))})})}}}),App.module("ContactsApp.List",function(a,b,c,d){a.Contact=d.ItemView.extend({tagName:"tr",template:"#contact-list-item",events:{click:"highlightName","click .js-delete":"deleteItem","click .js-show":"showItem"},highlightName:function(){this.$el.toggleClass("warning")},deleteItem:function(a){a.stopPropagation(),this.trigger("contact:delete",this.model)},showItem:function(a){a.stopPropagation(),a.preventDefault(),this.trigger("contact:show",this.model)}}),a.Contacts=d.CompositeView.extend({tagName:"table",template:"#contact-list",itemView:a.Contact,itemViewContainer:"tbody",className:"table table-hover"})}),App.module("ContactsApp.Show",function(a,b){a.Controller={showContact:function(c){var d=b.request("contact:entity",c);$.when(d).done(function(c){var d;d=void 0!==c?new a.Contact({model:c}):new a.MissingContact,b.mainRegion.show(d)})}}}),App.module("ContactsApp.Show",function(a,b,c,d){a.Contact=d.ItemView.extend({template:"#contact-view"}),a.MissingContact=d.ItemView.extend({template:"#missing-contact-view"})}),App.module("Entities",function(a,b,c,d,e){a.Contact=c.Model.extend({urlRoot:"contacts"}),a.configureStorage(a.Contact),a.ContactCollection=c.Collection.extend({model:a.Contact,url:"contacts"}),a.configureStorage(a.ContactCollection);var f=function(){var b=new a.ContactCollection([{id:1,firstName:"Alice",lastName:"Arten",phoneNumber:"555-0184"},{id:2,firstName:"Bob",lastName:"Brigham",phoneNumber:"555-0163"},{id:3,firstName:"Charlie",lastName:"Campbell",phoneNumber:"555-0129"}]);return b.forEach(function(a){a.save()}),b.models},g={getContactEntities:function(){var c=new a.ContactCollection,d=e.Deferred();window.setTimeout(function(){c.fetch({success:function(a){d.resolve(a)}})},b.latency);var g=d.promise();return e.when(g).done(function(a){if(0===a.length){var b=f();a.reset(b)}}),d.promise()},getContactEntity:function(c){var d=new a.Contact({id:c}),f=e.Deferred();return window.setTimeout(function(){d.fetch({success:function(a){f.resolve(a)},error:function(){f.resolve(void 0)}})},b.latency),f.promise()}};b.reqres.setHandler("contact:entities",function(){return g.getContactEntities()}),b.reqres.setHandler("contact:entity",function(a){return g.getContactEntity(a)})});