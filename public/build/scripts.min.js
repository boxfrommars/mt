var App=new Marionette.Application;App.addRegions({mainRegion:"#main-region",dialogRegion:"#dialog-region"}),App.latency=1e3,App.navigate=function(a,b){Backbone.history.navigate(a,b)},App.getCurrentRoute=function(){return Backbone.history.fragment},App.on("all",function(){console.log.apply(console,arguments)}),App.on("initialize:after",function(){Backbone.history&&(Backbone.history.start(),""===this.getCurrentRoute()&&App.trigger("contacts:list"))}),App.module("Common.Views",function(a,b,c,d,e){a.Loading=d.ItemView.extend({template:"#loading-view",onShow:function(){var a={lines:13,length:20,width:10,radius:30,corners:1,rotate:0,direction:1,color:"#000",speed:1,trail:60,shadow:!1,hwaccel:!1,className:"spinner",zIndex:2e9,top:"30px",left:"auto"};e("#spinner").spin(a)}})}),App.module("Entities",function(a,b,c,d,e,f){var g=function(a){if(a.urlRoot)return f.result(a,"urlRoot");if(a.url)return f.result(a,"url");if(a.collection&&a.collection.url)return f.result(a.collection,"url");throw new Error("Unable to determine storage key")},h=function(a){var b=g(a);return{localStorage:new c.LocalStorage(b)}};a.configureStorage=function(a){f.extend(a.prototype,new h(a.prototype))}}),App.module("ContactsApp",function(a,b,c,d){a.Router=d.AppRouter.extend({appRoutes:{contacts:"listContacts","contacts/:id":"showContact","contacts/:id/edit":"editContact"}});var e={listContacts:function(){a.List.Controller.listContacts()},showContact:function(b){a.Show.Controller.showContact(b)},editContact:function(b){a.Edit.Controller.editContact(b)}};b.on("contacts:list",function(){console.log("good list"),b.navigate("contacts"),e.listContacts()}),b.on("contact:show",function(a){console.log("good show"),b.navigate("contacts/"+a),e.showContact(a)}),b.on("contact:edit",function(a){console.log("good edit"),b.navigate("contacts/"+a+"/edit"),e.editContact(a)}),b.addInitializer(function(){new a.Router({controller:e})})}),App.module("ContactsApp.Edit",function(a,b){a.Controller={editContact:function(c){var d=new b.Common.Views.Loading;b.mainRegion.show(d);var e=b.request("contact:entity",c);$.when(e).done(function(c){var d;void 0!==c?(d=new a.Contact({model:c}),d.on("form:submit",function(a){c.save(a)?b.trigger("contact:show",c.get("id")):d.triggerMethod("form:data:invalid",c.validationError)})):d=new b.ContactsApp.Show.MissingContact,b.mainRegion.show(d)})}}}),App.module("ContactsApp.Edit",function(a,b,c,d){a.Contact=d.ItemView.extend({template:"#contact-form",events:{"click .js-submit":"saveContact"},saveContact:function(a){a.preventDefault();var b=c.Syphon.serialize(this);this.trigger("form:submit",b)},onFormDataInvalid:function(a){var b=this,c=this.$el,d=function(){var a=c.find("form");a.find(".help-block").each(function(){$(this).remove()}),a.find(".form-group.has-error").each(function(){$(this).removeClass("has-error")})},e=function(a,c){var d=b.$el.find("#contact-"+c).parent(),e=$("<span>",{"class":"help-block",text:a});d.append(e).addClass("has-error")};d(),_.each(a,e)}})}),App.module("ContactsApp.List",function(a,b){a.Controller={listContacts:function(){var c=new b.Common.Views.Loading;b.mainRegion.show(c);var d=b.request("contact:entities");$.when(d).done(function(c){var d=new a.Contacts({collection:c});b.mainRegion.show(d),d.on("itemview:contact:delete",function(a,b){b.destroy()}),d.on("itemview:contact:show",function(a,c){b.trigger("contact:show",c.get("id"))}),d.on("itemview:contact:edit",function(a,c){console.log("edit clicked"),b.trigger("contact:edit",c.get("id"))})})}}}),App.module("ContactsApp.List",function(a,b,c,d){a.Contact=d.ItemView.extend({tagName:"tr",template:"#contact-list-item",events:{click:"highlightName","click .js-delete":"deleteClicked","click .js-edit":"editClicked","click .js-show":"showClicked"},highlightName:function(){this.$el.toggleClass("warning")},deleteClicked:function(a){a.stopPropagation(),this.trigger("contact:delete",this.model)},showClicked:function(a){a.stopPropagation(),a.preventDefault(),this.trigger("contact:show",this.model)},editClicked:function(a){a.stopPropagation(),a.preventDefault(),this.trigger("contact:edit",this.model)}}),a.Contacts=d.CompositeView.extend({tagName:"table",template:"#contact-list",itemView:a.Contact,itemViewContainer:"tbody",className:"table table-hover"})}),App.module("ContactsApp.Show",function(a,b){a.Controller={showContact:function(c){var d=new b.Common.Views.Loading;b.mainRegion.show(d);var e=b.request("contact:entity",c);$.when(e).done(function(c){var d;void 0!==c?(d=new a.Contact({model:c}),d.on("contact:edit",function(a){b.trigger("contact:edit",a.get("id"))})):d=new a.MissingContact,b.mainRegion.show(d)})}}}),App.module("ContactsApp.Show",function(a,b,c,d){a.Contact=d.ItemView.extend({template:"#contact-view",events:{"click .js-edit":"editContact"},editContact:function(a){a.preventDefault(),console.log(this.model),this.trigger("contact:edit",this.model)}}),a.MissingContact=d.ItemView.extend({template:"#missing-contact-view"})}),App.module("Entities",function(a,b,c,d,e){a.Contact=c.Model.extend({urlRoot:"contacts",validate:function(a){var b={};return a.firstName||(b.firstName="can't be blank"),a.lastName?a.lastName.length<2&&(b.lastName="is too short"):b.lastName="can't be blank",_.isEmpty(b)?void 0:b}}),a.configureStorage(a.Contact),a.ContactCollection=c.Collection.extend({model:a.Contact,url:"contacts"}),a.configureStorage(a.ContactCollection);var f=function(){var b=new a.ContactCollection([{id:1,firstName:"Alice",lastName:"Arten",phoneNumber:"555-0184"},{id:2,firstName:"Bob",lastName:"Brigham",phoneNumber:"555-0163"},{id:3,firstName:"Charlie",lastName:"Campbell",phoneNumber:"555-0129"}]);return b.forEach(function(a){a.save()}),b.models},g={getContactEntities:function(){var c=new a.ContactCollection,d=e.Deferred();window.setTimeout(function(){c.fetch({success:function(a){d.resolve(a)}})},b.latency);var g=d.promise();return e.when(g).done(function(a){if(0===a.length){var b=f();a.reset(b)}}),d.promise()},getContactEntity:function(c){var d=new a.Contact({id:c}),f=e.Deferred();return window.setTimeout(function(){d.fetch({success:function(a){f.resolve(a)},error:function(){f.resolve(void 0)}})},b.latency),f.promise()}};b.reqres.setHandler("contact:entities",function(){return g.getContactEntities()}),b.reqres.setHandler("contact:entity",function(a){return g.getContactEntity(a)})});